apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    signingConfigs {
        debug {
            storeFile file('../keystore/Popcorn_keystore.jks')
            storePassword '123456'
            keyAlias 'alias'
            keyPassword '123456'
        }
        release {
            storeFile file('../keystore/Popcorn_keystore.jks')
            storePassword '123456'
            keyAlias 'alias'
            keyPassword '123456'
        }
    }
    compileSdk AndroidConfig.compileSdk

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "com.jonathanlee.popcorn"
        minSdk AndroidConfig.minSdk
        targetSdk AndroidConfig.targetSdk
        versionCode AndroidConfig.versionCode
        versionName AndroidConfig.versionName
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation Libraries.coreKtx
    implementation Libraries.appCompat
    implementation Libraries.material
    implementation Libraries.constraintLayout

    // architectural components
    implementation Libraries.lifecycleExtensions
    implementation Libraries.lifecycleRuntimeKtx
    implementation Libraries.lifecycleJava8

    // androidx
    implementation Libraries.swipeRefreshLayout
    implementation Libraries.palette

    // coroutines
    implementation Libraries.coroutinesCore
    implementation Libraries.coroutinesAndroid
    testImplementation Libraries.coroutinesAndroid
    testImplementation Libraries.coroutinesTest

    // Firebase
    implementation platform(Libraries.firebaseBom)
    implementation Libraries.firebaseAnalytics
    implementation Libraries.firebaseCrashlytics

    // network
    implementation Libraries.okhttp
    implementation Libraries.retrofit
    implementation Libraries.gson
    testImplementation Libraries.okhttpTest

    // Coil - image loader
    implementation Libraries.coil

    // Material Dialog
    implementation Libraries.materialDialog

    // unit test
    testImplementation Libraries.junit
    testImplementation Libraries.unitTestCore
    testImplementation Libraries.robolectric
    testImplementation Libraries.mockk
    testImplementation Libraries.androidxCoreTesting
    androidTestImplementation Libraries.espresso
    androidTestImplementation Libraries.androidxTest
    androidTestImplementation Libraries.androidxTestRules
}